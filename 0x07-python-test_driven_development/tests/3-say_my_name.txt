===========================
How to Use 3-say_my_name.py
===========================

This module defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Alice", "Johnson")
    My name is Alice Johnson

::

    >>> say_my_name("Charlie", "Brown")
    My name is Charlie Brown

::

    >>> say_my_name("Diana")
    My name is Diana 

::

    >>> say_my_name("Bob")
    My name is Bob 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(123, "Smith")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Eve", {"last": "Name"})
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name(None, "Johnson")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Hello", None)
    Traceback (most recent call last):
    TypeError: last_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Using ``say_my_name`` with doctest
-------------------

Importing the function from the module:
    >>> say_my_name_doctest = __import__("3-say_my_name").say_my_name

Checking for module docstring:
     >>> m = __import__("3-say_my_name").__doc__
     >>> len(m) > 1
     True

Checking for function docstring:
     >>> f = __import__("3-say_my_name").say_my_name.__doc__
     >>> len(f) > 1
     True

Checking for passing None as first name:
     >>> say_my_name_doctest(None, "Hello")
     Traceback (most recent call last):
     ...
     TypeError: first_name must be a string

Checking for passing None as last name:
     >>> say_my_name_doctest("Hello", None)
     Traceback (most recent call last):
     ...
     TypeError: last_name must be a string

Checking for wrong type as first name:
     >>> say_my_name_doctest(1, "Hello")
     Traceback (most recent call last):
     ...
     TypeError: first_name must be a string

Checking for wrong type as last name:
     >>> say_my_name_doctest("Hello", [4])
     Traceback (most recent call last):
     ...
     TypeError: last_name must be a string

Checking for normal use:
     >>> say_my_name_doctest("Hello", "World")
     My name is Hello World
     >>> say_my_name_doctest("You know nothing", "John Snow")
     My name is You know nothing John Snow

Checking for 1 arg:
     >>> say_my_name_doctest("Hello")
     My name is Hello 

Checking for more than 2 args:
     >>> say_my_name_doctest("Hello", "World", "hi")
     Traceback (most recent call last):
     ...
     TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

